{"version":3,"sources":["components/create-todo-component.js","components/about.js","App.js","serviceWorker.js","index.js"],"names":["Todo","props","react_default","a","createElement","className","todo","todo_description","todo_priority","CreateTodo","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeTodoDescription","bind","assertThisInitialized","onChangeTodoPriority","onSubmit","state","todo_completed","todos","_this2","axios","get","then","response","setState","data","catch","error","console","log","map","currentTodo","i","create_todo_component_Todo","key","e","target","value","concat","newTodo","post","res","style","marginTop","type","onChange","name","id","checked","vaue","marginBottom","todoList","Component","About","href","App","react_router_dom","class","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0867c6c0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nconst Todo = props => (\n  <tr className=\"todoEntry\">\n    <td className=\"todoEntry\">{props.todo.todo_description}</td>\n    <td className=\"todoEntry\">{props.todo.todo_priority}</td>\n  </tr>\n)\n\nexport default class CreateTodo extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.onChangeTodoDescription = this.onChangeTodoDescription.bind(this);\n        this.onChangeTodoPriority = this.onChangeTodoPriority.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            todo_description: '',\n            todo_priority: 'Low',\n            todo_completed: false,\n            todos: []\n        }\n    }\n\n\n        componentDidMount() {\n          axios.get('http://localhost:4000/todos/')\n               .then(response => {\n                 this.setState({todos: response.data});\n               })\n               .catch(function (error) {\n                 console.log(error);\n               })\n        }\n\n        todoList() {\n          return this.state.todos.map(function(currentTodo, i) {\n            return <Todo todo={currentTodo} key={i} />;\n          });\n        }\n\n    onChangeTodoDescription(e) {\n        this.setState({\n            todo_description: e.target.value\n        })\n    }\n\n    onChangeTodoPriority(e) {\n        this.setState({\n            todo_priority: e.target.value\n        })\n    }\n\n    onSubmit(e) {\n        console.log(`Form submitted: `);\n        console.log(`Todo Description: ${this.state.todo_description}`);\n        console.log(`Todo Description: ${this.state.todo_priority}`);\n        console.log(`Todo Description: ${this.state.todo_completed}`);\n\n        const newTodo = {\n          todo_description: this.state.todo_description,\n          todo_priority: this.state.todo_priority,\n          todo_completed: this.state.todo_completed\n        }\n\n        axios.post('http://localhost:4000/todos/add', newTodo)\n             .then(res => console.log(res.data));\n\n        this.setState({\n            todo_description: '',\n            todo_priority: 'Low',\n            todo_completed: false\n        })\n    }\n\n    render() {\n        return (\n            <div style={{marginTop: 20}}>\n\n                <br />\n                <br />\n                <form onSubmit={this.onSubmit}>\n                        <input type=\"text\"\n                               value={this.state.todo_description}\n                               onChange={this.onChangeTodoDescription}\n                               />\n                <br />\n                <br />\n\n                  <div className=\"form-group\">\n                    <div className=\"form-check\">\n                        <input type=\"radio\"\n                               className=\"form-check-input\"\n                               name=\"priorityOptions\"\n                               id=\"priorityLow\"\n                               value=\"Low\"\n                               checked={this.state.todo_priority === \"Low\"}\n                               onChange={this.onChangeTodoPriority}\n                               />\n                             <label className=\"form-check-label\">Low</label>\n\n\n                        <input type=\"radio\"\n                               className=\"form-check-input\"\n                               name=\"priorityOptions\"\n                               id=\"priorityMedium\"\n                               value=\"Medium\"\n                               checked={this.state.todo_priority === \"Medium\"}\n                               onChange={this.onChangeTodoPriority}\n                               />\n                             <label className=\"form-check-label\">Medium</label>\n\n                        <input type=\"radio\"\n                               className=\"form-check-input\"\n                               name=\"priorityOptions\"\n                               id=\"priorityHigh\"\n                               value=\"High\"\n                               checked={this.state.todo_priority === \"High\"}\n                               onChange={this.onChangeTodoPriority}\n                               />\n                        <label className=\"form-check-label\">High</label>\n                      </div>\n                    </div>\n                    <br />\n\n\n                    <div className=\"form-group\"\n>                       <input type=\"submit\" vaue=\"Create Todo\" className=\"button\" />\n                    </div>\n\n                </form>\n                <div>\n                    <table className=\"todosTable\" style={{marginTop:40, marginBottom:40}}>\n                      <tbody>\n                        {this.todoList() }\n                      </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './../index.css'\nimport { Link } from 'react-router-dom';\n\nclass About extends Component {\n\n  render() {\n    return (\n      <div className=\"about\">\n          <center><div className=\"siteheader\">WELCOME, GUEST</div> <br /> <br />This simple list application was\n          developed using React.js and Redux. It takes messages from\n          you and stores them for you to remember later.\n          <br /><br />\n          Try it out by typing in a message! Add it to your list by pressing\n          ENTER or hitting the SAVE button. You can delete a message simply by clicking\n          on it.\n                    <br /><br/><br/><br />\n          Developed largely through the aid of tutorials from Coding The Smart Way.\n          Check out the MERN Stack Tutorial series below:\n          <br/><br />\n            <a href=\"https://www.youtube.com/watch?v=qvBZevK1HPo\">MERN Stack tutorials from Coding The Smart Way</a>\n\n          <br /><br /><br/><br/>\n          Developed largely through the aid of tutorials from the Net Ninja\n          Youtube channel. Check out the React / Redux tutorials below!\n          <br/><br />\n            <a href=\"www.youtube.com/playlist?list=PL4cUxeGkcC9ij8CfkAY2RAGb-tmkNwQHG\">Net Ninja React (w/ Redux) tutorials</a>\n          <br />\n          <br /><br/>\n          The background was custom-made by me, in Photoshop, for this application!\n        </center>\n      </div>\n  )}\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport './App.css';\n\nimport CreateTodo from \"./components/create-todo-component\";\nimport About from \"./components/about\"\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <html>\n          <div id=\"sitebody\" className=\"sitebody\">\n            <center>\n              <a class=\"siteheader\" href=\"/home\">HOME</a>\n              <a class=\"siteheader\" href=\"/about\">ABOUT</a>\n            </center>\n            <Route path=\"/home\" component={CreateTodo} />\n            <center><Route path=\"/about\" component={About} /></center>\n          </div>\n        </html>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}